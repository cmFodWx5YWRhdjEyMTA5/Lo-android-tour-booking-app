package in.shajikhan.lo;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentPagerAdapter;import android.support.v4.view.ViewPager;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import android.widget.RelativeLayout;import java.util.ArrayList;import static in.shajikhan.lo.R.id.container;public class Packages extends AppCompatActivity {    /**     * The {@link android.support.v4.view.PagerAdapter} that will provide     * fragments for each of the sections. We use a     * {@link FragmentPagerAdapter} derivative, which will keep every     * loaded fragment in memory. If this becomes too memory intensive, it     * may be best to switch to a     * {@link android.support.v4.app.FragmentStatePagerAdapter}.     */    private SectionsPagerAdapter mSectionsPagerAdapter;    /**     * The {@link ViewPager} that will host the section contents.     */    private ViewPager mViewPager;    Payload payload = null ;    ArrayList groups = null ;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_packages);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        // Create the adapter that will return a fragment for each of the three        // primary sections of the activity.        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());        payload = new Payload(getApplicationContext());        groups = payload.getItemgroups("package");        // Set up the ViewPager with the sections adapter.        mViewPager = (ViewPager) findViewById(container);        mViewPager.setAdapter(mSectionsPagerAdapter);        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                int p = mViewPager.getCurrentItem() ;                Cart c = new Cart () ;                c.addPackage(getApplicationContext(), p);                Snackbar.make(view, "Added to Cart", Snackbar.LENGTH_LONG)                        .setAction("Action", null).show();            }        });    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_packages, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    /**     * A placeholder fragment containing a simple view.     */    public static class PlaceholderFragment extends Fragment {        /**         * The fragment argument representing the section number for this         * fragment.         */        private static final String ARG_SECTION_NUMBER = "section_number";        public PlaceholderFragment() {        }        /**         * Returns a new instance of this fragment for the given section         * number.         */        public static PlaceholderFragment newInstance(int sectionNumber) {            PlaceholderFragment fragment = new PlaceholderFragment();            Bundle args = new Bundle();            args.putInt(ARG_SECTION_NUMBER, sectionNumber);            fragment.setArguments(args);            return fragment;        }        @Override        public View onCreateView(LayoutInflater inflater, ViewGroup container,                                 Bundle savedInstanceState) {            RelativeLayout rootView1 = (RelativeLayout) inflater.inflate(R.layout.fragment_packages, container, false);            LinearLayout rootView = (LinearLayout) rootView1.findViewById(R.id.packages_layout);            int num = 0 ;            try {                num = Integer.valueOf(getArguments().getInt(ARG_SECTION_NUMBER));            }            catch (Exception e) {                e.printStackTrace();            }            //TextView textView = (TextView) rootView.findViewById(R.id.section_label);            //textView.setText(getString(R.string.section_format, getArguments().getInt(ARG_SECTION_NUMBER)));/*            ScrollView sw = new ScrollView(getContext());            sw.setFillViewport(true);            sw.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.FILL_PARENT));            sw.addView (rootView);            LinearLayout rel = new LinearLayout(getContext());            rel.addView(sw);            return rel;*/            rootView.addView (build(num));//            build(rootView1, 0);            return rootView1;        }        public View build (int number) {            Payload p = new Payload(getContext());            ArrayList a = p.getItemgroups("package");            Payload.ItemGroup i = (Payload.ItemGroup) a .get (number) ;            View dyna = new DynamicPackage(getContext(), i);            return dyna;        }    }    /**     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to     * one of the sections/tabs/pages.     */    public class SectionsPagerAdapter extends FragmentPagerAdapter {        public SectionsPagerAdapter(FragmentManager fm) {            super(fm);        }        @Override        public Fragment getItem(int position) {/*            LayoutInflater inflater = LayoutInflater.from(getApplicationContext());            inflater.inflate(R.layout.fragment_packages, null);            RelativeLayout rootView1 = new RelativeLayout(getApplicationContext());//            RelativeLayout rootView1 = (RelativeLayout) inflater.inflate(R.layout.fragment_packages);            LinearLayout rootView = new LinearLayout(getApplicationContext());            //TextView textView = (TextView) rootView.findViewById(R.id.section_label);            //textView.setText(getString(R.string.section_format, getArguments().getInt(ARG_SECTION_NUMBER)));*//*            ScrollView sw = new ScrollView(getContext());            sw.setFillViewport(true);            sw.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.FILL_PARENT));            sw.addView (rootView);            LinearLayout rel = new LinearLayout(getContext());            rel.addView(sw);            return rel;*//*            rootView.addView (dyna);*///            return rootView1;            // getItem is called to instantiate the fragment for the given page.            // Return a PlaceholderFragment (defined as a static inner class below).//            Fragment dyna = new PlaceholderFragment();//            dyna.b            Payload p = new Payload(getApplicationContext());            int total = p.getItemgroups("package").size();            if (position <= total) {                return new PlaceholderFragment().newInstance(position) ;            }            else {                Log.e ("Fragment", "position exceeded packages!");                return new PlaceholderFragment().newInstance(0) ;            }/*            switch (position) {                case 0:                    return new PlaceholderFragment().newInstance(0) ;                case 1:                    return new PlaceholderFragment().newInstance(1) ;//                    return new Package2 () ;                case 2:                    return new Package3 () ;                case 3:                    return new Package4 () ;            }            return PlaceholderFragment.newInstance(position + 1);*/        }        @Override        public int getCount() {            // Show 3 total pages.            Payload p = new Payload(getApplicationContext());            int total = p.getItemgroups("package").size();            return total;        }        @Override        public CharSequence getPageTitle(int position) {            Payload p = new Payload(getApplicationContext());            ArrayList groups = p.getItemgroups("package");            int total = groups.size();            if (position < total) {                Payload.ItemGroup group = p.getItemGroup(Integer.valueOf(String.valueOf(groups.get (position))));                return group.name;            }            else {                Log.e ("getPageTitle", "no more packages!");                return null;            }            /*switch (position) {                case 0:                    return "SECTION 1";                case 1:                    return "SECTION 2";                case 2:                    return "SECTION 3";            }            return null;*/        }    }}